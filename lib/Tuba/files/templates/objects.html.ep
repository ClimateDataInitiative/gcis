
% layout 'default';

<center>
<h2>
    %= (stash 'plural') || ucfirst($meta->table) .'s'
</h2>
</center>

% my $base = url_for('current')->to_abs;
% $base =~ s/.html$$//;
<pre>
JSON : <%= link_to "$base.json" => begin %><%= "$base.json" %><%= end %>
HTML : <%= link_to "$base.html" => begin %><%= "$base.html" %><%= end %>
Primary key : <%= $meta->primary_key %>
Unique keys : <%= join ',', $meta->unique_keys %>
Relationships : <%= join ',', map $_->name, @{ $meta->relationships } %>
</pre>

<%
  my @cols = (
    ( map $_->name, map $_->columns, $meta->primary_key ),
    ( map $_->name, @{ $meta->relationships } ),
    ( map $_->name, map $_->columns, $meta->unique_keys ),
  );
%>
% push @cols, @{ stash 'extra_cols' } if stash 'extra_cols';
<table class='table table-condensed table-bordered table-striped'>
<tr>
% for my $c (@cols) {
    <th><%= $c %></th>
% }
</tr>
% for my $o (@$objects) {
    <tr>
    % my $first = $cols[0];
    % my $val = $o->can($first) ? $o->$first : "error, cannot call $first";
        <td>
            %= link_to "show_".$meta->table, { $meta->table.'_'.$first => $val } => begin
            <%= $val %>
            %= end
        </td>
% for my $c (@cols[1..$#cols]) {
        % my $got = $o->can($c) ? $o->$c : "error, cannot call $c";
        <td>
            % if (ref($got) eq 'ARRAY') {
            %   for (@$got) {
                    %= obj_link($_);
            %   }
            % } elsif (ref($got)) {
                %= obj_link($got);
            % } else {
                %= $got
            % }
        </td>
% }
    </tr>
% }
</table>
