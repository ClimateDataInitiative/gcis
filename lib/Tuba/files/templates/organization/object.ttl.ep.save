% layout 'default', namespaces => [qw/gcis dcterms xsd dwc prov skos org/];
%= filter_lines_with empty_predicate() => begin

<<%= current_resource %>>
   dcterms:identifier "<%= $organization->identifier %>";
   skos:prefLabel "<%= $organization->name %>"^^xsd:string;
   gcis:hasURL "<%= $organization->url %>"^^xsd:anyURI;

% if (my $type = $organization->organization_type) {
## Organization Type
   org:purpose "<%= $type->identifier %>";
% }

## Country in which organization is situated
   % if (my $country = $organization->country) {
   dwc:countryCode "<%= $country->code %>";
   % }

% for my $map ($organization->organization_maps) {
## Relationship to other organizations
   prov:Relation "<%= $map->organization_relationship->label %>";             
   org:linkedto <<%= uri($map->other_organization) %>>;  
  % }

   a gcis:Organization .

% end



## Contributors
    % my $ctr = $object->contributors;
       <% for my $ctr (sort {
               ($a->role_type->sort_key <=> $b->role_type->sort_key )
            || ($a->role_type_identifier cmp $b->role_type_identifier )
            || ($a->person && $b->person
                 ?  ($a->person->last_name cmp $b->person->last_name) ||($a->person->first_name cmp $b->person->first_name)
                 : 0 )
             } @{ $object->contributors }) {
        %>

 <% for my $map (@{ $ctr->publication_contributor_maps }) { %>
% my $obj = $map->publication->to_object;
   <<%= obj_uri_for($obj)->to_abs %>>;
   a gcis:<%= $obj->meta->table %>;

% if ($ctr->person) {
   prov:qualifiedAttribution [
      a prov:Attribution;
      <<%= obj_uri_for($ctr->person)->to_abs %>>;
      prov:actedOnBehalfOf <<%= current_resource %>>;
      prov:hadRole "<%= $ctr->role_type->label %>"^^xsd:string;
      ]
   .
   % } 
% }
% }

    <% for my $ctr (sort {
               ($a->role_type->sort_key <=> $b->role_type->sort_key )
            || ($a->role_type_identifier cmp $b->role_type_identifier )
            || ($a->person && $b->person
                 ?  ($a->person->last_name cmp $b->person->last_name) ||($a->person->first_name cmp $b->person->first_name)
                 : 0 )
            } @{ $object->contributors }) {
        %>

 % for my $map (@{ $ctr->publication_contributor_maps }) { %>
  % my $obj = $map->publication->to_object;

  % my $pub = $object->get_publication;
% my $obj = $map->publication->to_object;
   <<%= obj_uri_for($obj)->to_abs %>>;
   a gcis:<%= $obj->meta->table %>;    
                prov:qualifiedAttribution [
                    a prov:Attribution;
                    prov:agent <<%= current_resource %>>;
                    prov:hadRole "<%= $ctr->role_type->label %>"^^xsd:string;
                ] ;
.
% }
% }
