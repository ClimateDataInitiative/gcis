#!/usr/bin/env perl

=head1 NAME

Tuba -- Tremendously Useful Backend API

=head1 DESCRIPTION

Tuba provides a RESTful API to GCIS data.

=cut

use Mojolicious::Lite;

app->secret(rand);

app->hook(before_dispatch => sub {
    # Remove path when behind a proxy (see Mojolicious::Guides::Cookbook).
    my $c = shift;
    push @{$c->req->url->base->path}, shift @{$c->req->url->path};
});

get '/' => sub {
  my $c = shift;
  my $trying;
  if (my $try = $c->param('try')) {
      $trying = $c->app->routes->lookup($try);
  }
  $c->stash(trying => $trying);
  return unless $trying;
  my @placeholders;
  for my $n (@{ $trying->pattern->tree }) {
      next unless @$n==2;
      next unless $n->[0] =~ /^(placeholder|wildcard|relaxed)$/;
      push @placeholders, $n->[1];
  }
  $c->stash(placeholders => \@placeholders);
} => 'index';

post 'calculate_url' => sub {
    my $c = shift;
    my $for = $c->param('_route_name');
    my $route = $c->app->routes->lookup($for) or return $c->render_not_found;
    my $params = $c->req->params->to_hash;
    delete $params->{_route_name};
    my $rendered = $route->pattern->render($params);
    $c->render_json({path => $rendered});
} => 'calculate_url';

#--------#
# Routes #
#--------#
get '/report/:report_id/chapter/:chapter_id/figure/:figure_id'
=> { report_id => 'nca2013' }
=> sub {
    my $c = shift;
    my ($ch,$fig) = ($c->stash('chapter_id'), $c->stash('figure_id'));
    $c->respond_to(
        json => sub { shift->render_json({chapter => $ch, figure => $fig}) },
        html => sub { shift->render({text => "this is html chapter <b>$ch</b> figure $fig", format => 'html'}) },
        any  => sub {  my $c = shift; $c->render_text('request type is not supported'.$c->req->headers->to_string) },
    );
} => 'figure';

get '/report/:report_id/figure/:figure_token'
=> { report_id => 'nca2013' }
=> sub {
    my $c = shift;
    return $c->redirect_to('figure', { chapter_id => 10, figure_id => 5 } );
} => 'figure_token';

app->start;

